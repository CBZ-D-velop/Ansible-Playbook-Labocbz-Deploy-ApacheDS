---
# Don't forget to keep this file updated
# molecule/<scenario>/verify.yml
- name: "Verify"
  hosts: "local"
  gather_facts: false
  tasks:

    - name: "Verify ApacheDS: Java"
      when: inv_install_apacheds | default(false)
      block:
        - name: "Verify Java -version, with alternative / default"
          register: instal_java__version_output
          changed_when: instal_java__version_output.rc != 0
          failed_when: "'build {{ inv_install_java__version }}' not in instal_java__version_output.stderr"
          ansible.builtin.command: java -version

        - name: "Verify Java -version, with custom binaries for Java {{ inv_install_java__version }}"
          loop:
            - "java-{{ inv_install_java__version }}"
            - "/usr/bin/java-{{ inv_install_java__version }}"
            - "/bin/java-{{ inv_install_java__version }}"
          loop_control:
            loop_var: instal_java__call
          register: instal_java__version_output
          changed_when: instal_java__version_output.rc != 0
          failed_when: "'build {{ inv_install_java__version }}' not in instal_java__version_output.stderr"
          ansible.builtin.command: "{{ instal_java__call }} -version"

    - name: "Verify ApacheDS: ApacheDS"
      when: inv_install_apacheds | default(false)
      block:
        - name: "Get ApacheDS services current state"
          register: install_apacheds__service_status
          failed_when: not install_apacheds__service_status.status.ActiveState == 'active'
          loop: "{{ inv_install_apacheds__instances }}"
          loop_control:
            loop_var: instance
          ansible.builtin.systemd:
            name: "apacheds_{{ instance.name }}"

        - name: "Check ApacheDS connectivities LDAP"
          when: not (instance.ssl | default(false))
          loop: "{{ inv_install_apacheds__instances }}"
          loop_control:
            loop_var: instance
          ansible.builtin.wait_for:
            host: "localhost"
            port: "10389"
            timeout: 120

        - name: "Check ApacheDS connectivities LDAPS"
          when: instance.ssl | default(false)
          loop: "{{ inv_install_apacheds__instances }}"
          loop_control:
            loop_var: instance
          ansible.builtin.wait_for:
            host: "localhost"
            port: "10636"
            timeout: 120

        - name: "Get default admin informations from instances LDAP"
          loop: "{{ inv_install_apacheds__instances }}"
          loop_control:
            loop_var: instance
          register: admin_instance_result
          failed_when: admin_instance_result.stdout == ""
          changed_when: admin_instance_result.rc != 0
          ansible.builtin.command: "ldapsearch -x -H ldap://localhost:10389 -D 'uid=admin,ou=system' -b 'dc=example,dc=com' -w '{{ instance.password }}'"
